To install RAT 7.0.16 on Cedar Alma 9:

module load nixpkgs/16.09
module load gcc/4.8.5
export SNOPLUS_CVMFS_DIR=/cvmfs/snoplus.egi.eu/sl7/
source /cvmfs/snoplus.egi.eu/sl7/sw/7.0.15/env_rat-7.0.15.sh
source /cvmfs/snoplus.egi.eu/sl7/sw/7.0.15/rat-7.0.15/env.sh
export LD_LIBRARY_PATH=/home/parkerw/rat7015/lib:/cvmfs/snoplus.egi.eu/sl7//sw/7.0.15/rat-7.0.15/lib:/cvmfs/snoplus.egi.eu/sl7//sw/7.0.15/rat-7.0.15/lib:/cvmfs/snoplus.egi.eu/sl7//sw/dependencies/root-5.34.38/lib:/cvmfs/snoplus.egi.eu/sl7//sw/dependencies/curl-7.26.0/lib:/cvmfs/snoplus.egi.eu/sl7//sw/dependencies/bzip2-1.0.6/lib:/cvmfs/snoplus.egi.eu/sl7/sw/dependencies/geant4.10.0.p02/lib64
./configure
. env.sh
scons


For pushing to CVMFS:
cd ~/temp_Will
git clone git@github.com:majek/openssl.git
cd openssl
./config --prefix=/home/snoprod/temp_Will/openssl/openssl --openssldir=/home/snoprod/temp_Will/openssl/ssl fips-enabled
make install
make depend

cd ../
git clone git@github.com:LairdCP/fipscheck.git
cd fipscheck
./autogen.sh
export PATH=~/temp_Will/openssl/apps/:$PATH
./configure
make
export LD_LIBRARY_PATH=/home/snoprod/temp_Will/fipscheck/src/.libs:$LD_LIBRARY_PATH

export LD_LIBRARY_PATH=/home/snoprod/temp_Will/fipscheck/src/.libs:/cvmfs/grid.cern.ch/alma9-ui-test//usr/lib64/:/cvmfs/grid.cern.ch/alma9-ui-test//usr/lib/:/cvmfs/grid.cern.ch/centos7-umd4-ui-151021/usr/lib64/:/cvmfs/grid.cern.ch/centos7-umd4-wn-4.0.5-1_191112/usr/lib64/

and rsync:
/cvmfs/grid.cern.ch/./centos7-umd4-ui-151021/usr/bin/gsissh

and can check it:
/cvmfs/grid.cern.ch/./centos7-umd4-ui-151021/usr/bin/gsissh -p 1975 cvmfs-upload01.gridpp.rl.ac.uk

./run_script_no_container.sh ../rat 7.0.16


Updated Pushing to CVMFS:

For RAT 7:
cd temp_Will/cvmfs_pusher
git clone https://github.com/snoplus/rat.git --branch 7.0.14
cd rat
module load nixpkgs/16.09
module load gcc/4.8.5
export SNOPLUS_CVMFS_DIR=/cvmfs/snoplus.egi.eu/el9
source /cvmfs/snoplus.egi.eu/el9/sw/7.0.15/env_rat-7.0.15.sh
export LD_LIBRARY_PATH=/home/parkerw/rat7015/lib:/cvmfs/snoplus.egi.eu/sl7//sw/7.0.15/rat-7.0.15/lib:/cvmfs/snoplus.egi.eu/sl7//sw/7.0.15/rat-7.0.15/lib:/cvmfs/snoplus.egi.eu/sl7//sw/dependencies/root-5.34.38/lib:/cvmfs/snoplus.egi.eu/sl7//sw/dependencies/curl-7.26.0/lib:/cvmfs/snoplus.egi.eu/sl7//sw/dependencies/bzip2-1.0.6/lib:/cvmfs/snoplus.egi.eu/sl7/sw/dependencies/geant4.10.0.p02/lib64
./configure
. env.sh
scons
cd ../cvmfs_pusher
./run_script_no_container.sh ../rat 7.0.14

For RAT 8:
export SNOPLUS_CVMFS_DIR=/cvmfs/snoplus.egi.eu/el9
cd temp_Will/cvmfs_pusher
rm -rf rat
git clone https://github.com/snoplus/rat.git --branch $TAG
cd cvmfs_pusher
./run_script.sh ../rat $TAG ../rat-container.sif


Dependencies:

FFTW:
Get tar from https://www.fftw.org/download.html
tar xvf fftw-3.3.10.tar
cd fftw-3.3.10
./configure --prefix=/home/snoprod/temp_Will/cvmfs/el9/fftw-3.3.10/ --with-pic
make install
make

GSL:
Get tar from https://www.gnu.org/software/gsl/ (current stable version)
tar xvf gsl-latest.tar
cd gsl-2.7.1/
./configure --with-pic --prefix=/home/snoprod/temp_Will/cvmfs/el9/gsl-2.7.1/
make
make install

ROOT:
module load StdEnv/2023
module load gcc/12.3
Get tar from https://root.cern/releases/release-63008/
tar xvf root_v6.30.06.source.tar
cd root-6.30.06
mkdir obj
cd obj
export GSL_ROOT_DIR=/home/snoprod/temp_Will/cvmfs/el9/sw/dependencies/gsl-2.7.1/
export FFTW_DIR=/home/snoprod/temp_Will/cvmfs/el9/sw/dependencies/fftw-3.3.10/
cmake -Dminuit2=ON -Droofit=ON -Dfortran=OFF -Dfftw3=ON -Dgsl=ON -Dgdml=ON -Dmathmore=ON -Dclad=OFF -Dbuiltin_tbb=OFF -Dimt=OFF  ..
make -j 4

Geant4:
module load StdEnv/2020
module load gcc/11.3.0
Get tar from https://cern.ch/geant4-data/releases/geant4.10.00.p04.tar.gz
tar xvf geant4.10.00.p04.tar
mkdir geant4.10.00.p04-build
cd geant4.10.00.p04-build
cmake -DGEANT4_INSTALL_DATA=ON -DGEANT4_BUILD_CXXSTD=c++11 -DCMAKE_INSTALL_PREFIX=/home/snoprod/temp_Will/cvmfs/el9/sw/dependencies/geant4.10.00.p04/ /home/snoprod/temp_Will/cvmfs/el9/sw/dependencies/geant4.10.00.p04/
make
make install
cd ..
source geant4.10.00.p04/bin/geant4.sh
source geant4.10.00.p04/share/Geant4-10.0.4/geant4make/geant4make.sh

cURL:
(use og compiler so can use the system openssl here i.e exit and ssh back in if you have to)
Get tar from https://curl.se/download.html
tar xvf curl-8.8.0.tar
cd curl-8.8.0
./configure --prefix=/home/snoprod/temp_Will/cvmfs/el9/curl-8.8.0/tree --with-openssl
make
make install

bzip2:
Get tar from https://sourceware.org/bzip2/index.html
tar xvf bzip2-1.0.8.tar
cd bzip2-1.0.8
make
make install PREFIX=/home/snoprod/temp_Will/cvmfs/el9/bzip2-1.0.8/tree

SCons:
Get tar from https://sourceforge.net/projects/scons/files/scons/3.1.2/scons-3.1.2.tar.gz/download
tar xvf scons-3.1.2.tar.gz
cd scons-3.1.2
python setup.py build
python setup.py install --prefix=/home/snoprod/temp_Will/cvmfs/el9/scons-3.1.2/tree

RAT 8:
module load StdEnv/2023
module load gcc/12.3
git clone git@github.com:snoplus/rat
cd rat
./configure
source env.sh
scons


RAT Container:

git clone git@github.com:snoplus/rat.git rat_test/
apptainer pull --name rat-container.sif docker://snoplus/rat-container:main
apptainer shell -B /home/parkerw/rat_test/:/rat rat-container.sif
source /home/scripts/setup-env.sh (gives error first time)
source /home/scripts/build-rat.sh
rat

After each: Make a selection (1-7, q aborts) [1]: 7

Making new Container:

Edit recipe file
docker build -t main -f MAIN/Dockerfile .
(obviously change main)
check it:
docker run -ti --init --rm -v /Users/wparker/snoplus/rat:/rat snoplus/rat-container:main
source /home/scripts/build-rat.sh

Push to Docker
docker tag <local_tag_name> snoplus/rat-container:<remote_tag_name>
docker push snoplus/rat-container:<remote_tag_name>
