First do Quad:

cd rat-tools_fork/FitCoordination/QuadSpeed
use Template_Macro.mac (Template_Macro_Quad.mac in Scripts) with rat_submission/submitQuadJobs

something like:
python submitQuadJobs.py /home/parkerw/Software/rat_master/Template_Macro_Quad.mac /data/snoplus3/parkerw/ratSimulations/Jun23_Quad_2.5Terecoord -e /home/parkerw/Software/env-dev.sh -s /home/parkerw/Software/rat_submission/ -d /home/parkerw/Software/rat_master/

Update Utilities.py to use produced files and do:
python AnalyseData.py -i "labppo_2p2_scintillator"
to get the printed out table to put in the db file. 

To make plot, change histograms = Utilities.ProducePlots(index) to histograms = Utilities.DrawPlot( index ) and do something like
python AnalyseData.py -i "labppo_2p2_scintillator"



Now going to recoord ScintEffVel, then MultiPDF, and repeat

For ScintEffVel:
cd rat-tools_fork/FitCoordination/ScintEffectiveSpeed
use Template_Macro.mac with rat_submission/submitVelJobs

something like:
python submitVelJobs.py ../rat_root6/Template_Macro.mac /data/snoplus3/parkerw/ratSimulations/Apr8_5MeV_SEVRound1 -e /home/parkerw/Software/env-dev.sh -s /home/parkerw/Software/rat_submission/ -d /home/parkerw/Software/rat_root6/ -n 1

Update PlotRadialBias.C to use these files and do:
root -l PlotRadialBias.C
to make the gaussians, one for each velocity, all on one canvas. Might want to update y axis

Update Utilities.py to use produced files and do:
python AnalyseData.py -i "labppo_2p2_scintillator"
to get the printed out table to put in the db file. (may need root 5.34.38 for this)

In Utilities, reverse meanBias[0] and speed in oneDimTGraph.SetPoint, also add: oneDimTGraph.SetPointError(count, 0, meanBias[1]). 
In AnalyseData.py change histograms = Utilities.ProducePlots(i_energy) to histograms = Utilities.DrawPlot(). Comment out the next 3 lines.
(May have to rename fitter in Utilities)

Also reverse the axis titles and add these lines in DrawPlot
  histograms[2].SetMarkerStyle(20)
  histograms[2].GetYaxis().SetRangeUser(-75,75)
  ROOT.gPad.SetFrameLineWidth(2)
  ROOT.gPad.SetGrid(1)

and do:
python AnalyseData.py -i "labppo_2p2_scintillator" (may need root 5.34.38 for this)

Might have to double click the canvas once it's run to get the linear plot. Fit with tool panel on canvas.

You could then run simulation for the fitted speed to check it comes out consistent with 0 bias. Then run Plot1RadialBias.C to make the single gaussian.


When converged with MultiPDF, now run simulation at higher energy.
Update energy in Template_Macro_SEV.mac and do something like:
something like:
python submitVelJobs.py /home/parkerw/Software/rat_master/Template_Macro_SEV.mac /data/snoplus3/parkerw/ratSimulations/Jun26_SEV_2.5Terecoord_10MeV -e /home/parkerw/Software/env-dev.sh -s /home/parkerw/Software/rat_submission/ -d /home/parkerw/Software/rat_master/

Now update filepaths in Utilities.py (infileName and allfiles)


For MultiPDF:
cd rat-tools_master/FitCoordination/MultiPDFFull
use Template_Macro.mac and add line
/rat/db/set EFFECTIVE_VELOCITY inner_av_velocity 185.25569251 (with value from latest scinnteffvel recoord round)

something like:
python submitJobs.py /home/parkerw/Software/rat_master/Template_Macro_MPDF.mac /data/snoplus3/parkerw/ratSimulations/Jun23_MPDF_1.5Terecoord_Round1 -e /home/parkerw/Software/env-dev.sh -s /home/parkerw/Software/rat_submission/ -d /home/parkerw/Software/rat_master/ -n 100

Update Coordinate.cpp to use these files and do:
root -l
.L Coordinate.cpp+
GetFullPDF("labppo_2p2_scintillator", 100)
.q
Copy table to data/ET1D_MultiPDF.ratdb
mv MultiPDF_Plots.root MultiPDF_Plots_RoundX.root

Update ComparePDFs.cc to use new pdf file
root -l
.L ComparePDFs.cc+
Compare2PDFs() (or however many)


For FitPerformance:

Use Template_Macro_Perf1to10MeV.mac and Template_Macro_Perf2.5MeV.mac (update material)
with something like:

python submitJobs.py /home/parkerw/Software/rat_master/Template_Macro_Perf1to10MeV.mac /data/snoplus3/parkerw/ratSimulations/Jun28_FitPerf_1to10MeV_2.5Terecoord -e /home/parkerw/Software/env-dev.sh -s /home/parkerw/Software/rat_submission/ -d /home/parkerw/Software/rat_master/ -n 100

Remove e from plotting_1D.cfg prolly
For plotting as a function of E, you're gonna wanna cut anything beyond 4/6m in utilities/plotting_tools.py:

if( mc.GetMCParticle(0).GetPosition().Mag() > 4000):
    continue

And do something like:
python fit_performance_tool.py "/data/snoplus3/parkerw/ratSimulations/Jun27_FitPerf_2.5MeV_1.5Terecoord/*.root" r -f positionTimeFit -o ./Jun27_FitPerf_2.5MeV_1.5Terecoord_R.root -c plotting_1D.cfg --autoview  --debug

And repeat for r and z for 2.5MeV, e, r, and z for 1-10MeV

And to make plots update file paths in CompareFittersLoop.cc, also uupdate y axis ranges and TLine range.

root -l
.L CompareFittersLoop.cc+
Compare2RFits()
